=======================
How to use 1-my_list.py
=======================

This module inherits form ``list`` and defines sorting function ``print_sorted()``.

Usage
=====

This module accepts integers.

::

	>>> MyList = __import__('1-my_list').MyList
	>>> my_list = MyList()
	>>> my_list.append(1)
	>>> my_list.append(2)
	>>> my_list.append(3)
	>>> my_list.append(4)
	>>> my_list.append(5)
	>>> print(my_list)
	[1, 2, 3, 4, 5]

::

	>>> my_list = MyList()
	>>> my_list.append(1.0)
	>>> my_list.append(4.0)
	>>> my_list.append(2.0)
	>>> my_list.append(3.0)
	>>> my_list.append(5.0)
	>>> print(my_list)
	[1.0, 4.0, 2.0, 3.0, 5.0]

::

	>>> my_list = MyList()
	>>> my_list.append(1)
	>>> my_list.append([1, 2, "a"])
	>>> my_list.append(2)
	>>> my_list.append(3)
	>>> my_list.append(5)
	>>> print(my_list)
	[1, [1, 2, 'a'], 2, 3, 5]

``print_sorted()`` prints the list in sorted ascending order:

::

	>>> my_list = MyList()
	>>> my_list.append(1)
	>>> my_list.append(4)
	>>> my_list.append(2)
	>>> my_list.append(3)
	>>> my_list.append(5)
	>>> my_list.print_sorted()
	[1, 2, 3, 4, 5]

If a non-integer is added to the list, a TypeError is raised:

::

	>>> my_list = MyList()
	>>> my_list.append(1)
	>>> my_list.append(4)
	>>> my_list.append("a")
	>>> my_list.append(3)
	>>> my_list.append(5)
	>>> print(my_list)
	Traceback (most recent call last):
	TypeError: '<' not supported between instances of 'str' and 'int'

::

	>>> my_list = MyList()
	>>> my_list.append(1)
	>>> my_list.append(4)
	>>> my_list.append(float('inf'))
	>>> my_list.append(3)
	>>> my_list.append(5)
	>>> my_list.print_sorted()
	[1, 3, 4, 5, inf]
