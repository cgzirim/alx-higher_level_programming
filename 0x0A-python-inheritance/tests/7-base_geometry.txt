==============================
How to use 7-base_geometry.py.
==============================

This module defines a class BaseGeometry:

Usage:
======

	```integer_validator(...)``` validates the input value.

::

	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

	>>> bg = BaseGeometry()

	>>> bg.integer_validator("my_int", 12)
	>>> bg.integer_validator("width", 89)

	>>> bg.integer_validator("name", "John")
	Traceback (most recent call last):
	TypeError: name must be an integer

	>>> bg.integer_validator("age", 0)
	Traceback (most recet call last):
	ValueError: age must be greater than 0

        >>> bg.integer_validator("age", (5,))
	Taceback (most recent call last):
	TypeError: age must be an integer

 	>>> bg.integer_validator("age", [3])
        Taceback (most recent call last):
        TypeError: age must be an integer

	>>> bg.integer_validator("age", {3, 4})
        Taceback (most recent call last):
        TypeError: age must be an integer

	>>> bg.integer_validator("age", [3])
        Taceback (most recent call last):
        TypeError: age must be an integer

        >>> bg.integer_validator("age", True)

	>>> bg.integer_validator("age", None)
        Taceback (most recent call last):
        TypeError: age must be an integer

	>>> bg.area()
	Tracback (most recent call last):
	[Exception] area() is not implemented

	>>> bg.integer_validator(“age”)
	Traceback (most recent call last):
	TypeError: integer_validator() missing 1 required positional argument: 'value'


