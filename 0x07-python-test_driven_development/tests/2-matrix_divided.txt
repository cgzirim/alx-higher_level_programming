==============================
How to use 2-matrix_divided.py
==============================

This module defines the function ``matrix_divided(matrix, div)`` which divides all elements of a matrix.

Usage
=====

``matrix_divided(...)``` divides elements in a matrix by a ``div`` and returns a new matrix with the quotients.

::

	>>> matrix_divided=__import__('2-matrix_divided').matrix_divided
	>>> matrix = [
	...     [1, 2, 3],
	...     [4, 5, 6]
	... ]
	>>> matrix_divided(matrix, 5)
	[[0.2, 0.4, 0.6], [0.8, 1.0, 1.2]]

Note that quotients would be rounded to two decimal places.

::

	>>> matrix = [
	...     [1, 2, 3],
	...     [4, 5, 6]
	... ]
	>>> matrix_divided(matrix, 3.5)
	[[0.29, 0.57, 0.86], [1.14, 1.43, 1.71]]

::

	>>> matrix = [
	...     [1, 2, 3],
	...     [4, 5, 6],
	...     [7, 8, 9]
	... ]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0], [2.33, 2.67, 3.0]]

matrix_divided expects the matrix to be a matrix (list of lists) of integers/floats and ``div`` either integer or float. Otherwise a TypeError is raised:

::

	>>> matrix_divided("LIST", 4)
	    Traceback (most recent call last):
	    TypeError: matrix must be a matrix (list of lists) of integers/floats

::

	>>> matrix = []
	>>> matrix_divided(matrix, 4)
	    Traceback (most recent call last):
	    TypeError: matrix must be a matrix (list of lists) of integers/floats

::
	
	>>> matrix_divided([1, 2, 3], 4)
	    Traceback (most recent call last):
	    TypeError: matrix must be a matrix (list of lists) of integers/floats

::

	>>> matrix = [
	...     [1, 2, 3],
	...     [3, 4 ,5]
	... ]
	>>> matrix_divided(matrix, "4")
	    Traceback (most recent call last)
	    TypeError: div must be a number

if ``div`` is zero a ZeroDivisionError is raised:

::

	>>> matrix = [
	...     [1, 2, 3],
	...     [4, 5, 6]
	... ]
	>>> matrix_divided(matrix, 0)
	    Traceback (most recent call last)
	    ZeroDivisionError: division by zero

The function would return a 0.0 for every element divided by infinite.

::

	>>> matrix = [
	...     [1, 2, 3],
	...     [4, 5, 6]
	... ]
	>>> matrix_divided(matrix, float('inf'))
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
