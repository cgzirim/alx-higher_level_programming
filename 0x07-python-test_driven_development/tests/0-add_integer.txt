===========================
How to use 0-add_integer.py
===========================

This module defines an integer addition function ``add_integer(a, b=98)``.

Usage
=====

``add_integer(...)``` returns the sum of its arguments.

::

	>>> add_integer= __import__('0-add_integer').add_integer
	>>> add_integer(7, 8)
	15

::

	>>> add_integer(4, -5)
	-1

The function works with floating-point values.

::

	>>> add_integer(3, 5)
	8

Note that the floats are castrd into ints before the addition is performed.

::

	>>> add_integer(2.6, 3.2)
	5

::

	>>> add_integer(5.2, -7)
	-2

The second argument is optional - by default, it is 98.

::

	>>> add_integer(2)
	100

Non-Numbers
===========

``add_integer()`` expects that both arguments are either integers or floats.
If either argument is a non-integer and non-float, a TypeError is raised:

::

	>>> add_integer("text", 5)
	Traceback (most recent call last):
	TypeError: a must be an integer

::

	>>> add_integer(5, "text)
	Traceback (most recent call last):
        TypeError: b must be an integer

::

	>>> add_integer(None)
	Traceback (most recent call last):
	TypeError: a must be an integer

::

	>>> add_integer(3.1, None)
	Traceback (most recent call last):
	TypeError: b must be an integer

::

If both arguments are non-integers and non-floats, a TypeError message is only
printed for the first argument.

::

	>>> add_integer("hello", "world")
	Traceback (most recent call last):
	TypeError: a must be an integer

The function will fail if infinity is provided.

::

	>>> add_integer(float(inf))
	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to integer

::

	>>> add_integer(float(inf), 5)
	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to integer

And again NaN numbers.

::

	>>> add_integer(float('nan'))
	Traceback (most recent call last):
	ValueError: cannot convert float NaN to integer

::

::

    >>> add_integer(float('nan'), 5)
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer
